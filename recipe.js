const SPRITESHEET_POSITIONS = new Map([
  ['Бирюзовый краситель', [18, 21]],
  ['Жёлтый краситель', [19, 21]],
  ['Голубой краситель', [23, 21]],
  ['Лаймовый краситель', [25, 21]],
  ['Оранжевый краситель', [27, 21]],
  ['Пурпурный краситель', [28, 21]],
  ['Фиолетовый краситель', [29, 21]],
  ['Красный краситель', [30, 21]],

  ['Белая шерсть', [0, 48]],
  ['Жёлтая шерсть', [1, 48]],
  ['Чёрная шерсть', [18, 47]],
  ['Синяя шерсть', [19, 47]],
  ['Коричневая шерсть', [20, 47]],
  ['Бирюзовая шерсть', [21, 47]],
  ['Серая шерсть', [22, 47]],
  ['Зелёная шерсть', [23, 47]],
  ['Голубая шерсть', [24, 47]],
  ['Светло-серая шерсть', [25, 47]],
  ['Лаймовая шерсть', [26, 47]],
  ['Сиреневая шерсть', [27, 47]],
  ['Оранжевая шерсть', [28, 47]],
  ['Розовая шерсть', [29, 47]],
  ['Фиолетовая шерсть', [30, 47]],
  ['Красная шерсть', [31, 47]],

  ['Фиолетовый ковёр', [0, 51]],
  ['Красный ковёр', [1, 51]],
  ['Белый ковёр', [2, 51]],
  ['Чёрный ковёр', [20, 50]],
  ['Синий ковёр', [21, 50]],
  ['Коричневый ковёр', [22, 50]],
  ['Бирюзовый ковёр', [23, 50]],
  ['Серый ковёр', [24, 50]],
  ['Зелёный ковёр', [25, 50]],
  ['Голубой ковёр', [26, 50]],
  ['Светло-серый ковёр', [27, 50]],
  ['Лаймовый ковёр', [28, 50]],
  ['Сиреневый ковёр', [29, 50]],
  ['Жёлтый ковёр', [3, 51]],
  ['Оранжевый ковёр', [30, 50]],
  ['Розовый ковёр', [31, 50]],

  ['Чёрная керамика', [1, 22]],

  ['¤ Булочное тесто ¤', [27, 34]],
  ['¤ Мука ¤', [15, 21]],
  ['¤ Хлебное тесто ¤', [27, 34]],
  ['Акациевая дверь', [6, 29]],
  ['Акациевая калитка', [20, 26]],
  ['Акациевая лодка', [10, 42]],
  ['Акациевая плита', [22, 26]],
  ['Акациевые доски', [21, 26]],
  ['Акациевые ступеньки', [23, 26]],
  ['Акациевый забор', [19, 26]],
  ['Акация', [30, 31]],
  ['Булочка Без наполнителя', [22, 25]],
  ['Булочка Со слабой защитой от огня', [22, 25]],
  ['Булочка С обычной защитой от огня', [22, 25]],
  ['Булочка С расширенной защитой от огня', [22, 25]],
  ['Булыжная ограда', [13, 27]],
  ['Булыжная плита', [11, 27]],
  ['Булыжник', [10, 27]],
  ['Булыжные ступеньки', [12, 27]],
  ['Вагонетка', [11, 39]],
  ['Ведро', [27, 20]],
  ['Верстак', [24, 38]],
  ['Весло', [1, 77]],
  ['Гладкий гранит', [12, 28]],
  ['Глина', [12, 30]],
  ['Гранит', [19, 30]],
  ['Грибной набор', [18, 36]],
  ['Деконструктор', [4, 77]],
  ['Деревянный меч', [12, 40]],
  ['Доски из тропического дерева', [31, 27]],
  ['Древесный уголь', [28, 34]],
  ['Дуб', [29, 32]],
  ['Дубовая дверь', [16, 29]],
  ['Дубовая плита', [7, 28]],
  ['Дубовые доски', [6, 28]],
  ['Дубовые ступеньки', [8, 28]],
  ['Дёрн', [20, 30]],
  ['Еловая дверь', [25, 29]],
  ['Железийный топор Эффективность II', [3, 77]],
  ['Железийный топор', [2, 77]],
  ['Железная клёпка', [28, 44]],
  ['Железная рельса', [7, 35]],
  ['Железная руда', [25, 31]],
  ['Железные ботинки', [3, 1]],
  ['Железные поножи', [7, 1]],
  ['Железные прутья', [27, 27]],
  ['Железные шлем', [5, 1]],
  ['Железный нагрудник', [4, 1]],
  ['Железный слиток', [7, 35]],
  ['Забор из тропического дерева', [29, 27]],
  ['Заготовка под броню', [8, 35]],
  ['Заготовка под ведро', [5, 1]],
  ['Земля', [18, 30]],
  ['Калитка из тропического дерева', [30, 27]],
  ['Каменная куртка', [2, 0]],
  ['Каменные ботинки', [1, 0]],
  ['Каменные кирпичи', [8, 31]],
  ['Каменные штанцы', [4, 0]],
  ['Каменный шлём', [3, 0]],
  ['Камень', [7, 31]],
  ['Капля энергии', [17, 20]],
  ['Картофель', [24, 20]],
  ['Кирпич', [27, 34]],
  ['Кирпичная плита', [6, 27]],
  ['Кирпичные ступеньки', [4, 27]],
  ['Кирпичный блок', [5, 27]],
  ['Кожа', [8, 35]],
  ['Кожаная куртка', [11, 1]],
  ['Кожаные ботинки', [8, 1]],
  ['Кожаные штаны', [10, 1]],
  ['Кожаный шлем', [9, 1]],
  ['Комок глины', [29, 34]],
  ['Коричневый гриб', [5, 32]],
  ['Красный гриб', [5, 33]],
  ['Красный кирпич', [27, 34]],
  ['Красный песок', [1, 31]],
  ['Кремень', [3, 35]],
  ['Лоза', [17, 33]],
  ['Лук', [31, 39]],
  ['Люк', [29, 29]],
  ['Малый энергоосколок', [15, 35]],
  ['Миска', [18, 36]],
  ['Нити лозы', [16, 21]],
  ['Нить', [20, 35]],
  ['Ножницы', [5, 38]],
  ['Оранжевое стекло', [30, 23]],
  ['Осколок льда', [14, 35]],
  ['Палка', [19, 35]],
  ['Перо', [2, 35]],
  ['Песок', [3, 31]],
  ['Печенье', [31, 25]],
  ['Печёный картофель', [12, 20]],
  ['Плечо лука', [19, 35]],
  ['Плита из каменных кирпичей', [4, 29]],
  ['Плита из тропического дерева', [0, 28]],
  ['Плотный лёд', [29, 30]],
  ['Подготовленное железо', [25, 31]],
  ['Полимерное стекло', [22, 24]],
  ['Пустой примитивный кристалл', [14, 35]],
  ['Пшеница', [17, 26]],
  ['Рельсы', [20, 29]],
  ['Рукоять лука', [19, 35]],
  ['Саженец тропического дерева', [19, 32]],
  ['Сахар', [16, 26]],
  ['Сахарный тростник', [15, 33]],
  ['Свекольный набор', [18, 36]],
  ['Свекольный суп', [21, 33]],
  ['Свёкла', [19, 33]],
  ['Семена пшеницы', [10, 33]],
  ['Смесь для выпечки печенья', [16, 26]],
  ['Смесь для выпечки пирога', [16, 26]],
  ['Смесь для выпечки торта', [16, 26]],
  ['Снег', [29, 28]],
  ['Содалит', [22, 21]],
  ['Содалитовый кристалл', [3, 28]],
  ['Содаловая кислота', [14, 35]],
  ['Средний энергоосколок', [15, 35]],
  ['Сталь', [7, 35]],
  ['Стальная броня', [7, 77]],
  ['Стальная заготовка под броню', [7, 35]],
  ['Стальная каска', [8, 77]],
  ['Стальной блок', [1, 27]],
  ['Стальной лист', [12, 35]],
  ['Стальные сандалии', [5, 77]],
  ['Стальные шорты', [6, 77]],
  ['Стекло', [24, 27]],
  ['Стеклостальной порошок', [24, 21]],
  ['Стрела', [18, 39]],
  ['Ступеньки из каменного кирпича', [3, 29]],
  ['Ступеньки из тропического дерева', [1, 28]],
  ['Сырая говядина', [7, 26]],
  ['Сырой кирпич', [9, 35]],
  ['Терракота', [22, 30]],
  ['Торт', [20, 38]],
  ['Тотем', [6, 44]],
  ['Точило', [20, 21]],
  ['Тушёные грибы', [3, 26]],
  ['Тыква', [3, 33]],
  ['Тыквенный пирог', [5, 26]],
  ['Уголь', [30, 34]],
  ['Уплотнённый снег', [12, 47]],
  ['Устройство Возраждатель', [6, 44]],
  ['Факел', [20, 31]],
  ['Хворостина', [19, 35]],
  ['Хлеб', [22, 25]],
  ['Цветочный горшок', [6, 21]],
  ['Чернильный мешочек', [21, 21]],
  ['Ядро роста', [21, 20]],
  ['Яйцо', [0, 26]],
  
  ['Красно-пищальниковый полублок',[19, 28]],
  ['Красно-пищальниковые ступеньки',[20, 28]],
  ['Красный пищальник', [2, 31]],
  ['Истончённое полимерное стекло', [23, 24]],
  ['Литой слиток', [5, 35]],
  ['Литовое стекло', [21, 22]],
  ['Очищенный слиток лита', [5, 35]],
  ['Очищенный лит', [13, 20]],
  ['Пыль лита Мелкий порошок лита', [4, 35]],
  ['Стеклолитой порошок', [23, 21]],
  ['Кристалл огня', [14, 20]],
  ['Кристалл лита Небольшой кристалл лита', [19, 20]],
  ['Ведро лавы', [28, 20]],
  ['Литой шлем', [0, 1]],
  ['Литой нагрудник', [31, 0]],
  ['Литые штаны', [2, 1]],
  ['Литые ботинки', [30, 0]],
  ['Литая заготовка под броню', [5, 35]],
  ['Чистый литой шлем', [12, 77]],
  ['Огнеупорный литой нагрудник', [11, 77]],
  ['Крапивозащитные штаны', [10, 77]],
  ['Ботинки с литыми вставками', [9, 77]],
  ['Камни с литом', [6, 35]],
  ['Пластина лита', [12, 35]],
  ['Литовое стекло', [6, 23]],
  ['Укреплённый булыжник', [10, 27]],
  
])

const OTHER_ASSETS = new Map([
  ['Магма', 'magma-block.gif']
])

function itemSpriteHtml(item, additionalClasses = []) {
  if (SPRITESHEET_POSITIONS.has(item)) {
    let x = SPRITESHEET_POSITIONS.get(item)[0] * 32;
    let y = SPRITESHEET_POSITIONS.get(item)[1] * 32;
    return `<span class="sprite ${additionalClasses.join(' ')}" name="${item}" style="background-position: -${x}px -${y}px"></span>`;
  } else if (OTHER_ASSETS.has(item)) {
    return `<span class="sprite ${additionalClasses.join(' ')}" name="${item}" style="background-image:url(assets/${OTHER_ASSETS.get(item)});"></span>`;
  } else {
    throw new Error(`Key "${item}" not found in SPRITESHEET_POSITIONS or OTHER_ASSETS.`);
  }
}

function itemAmountHtml(amount) {
  slotClass = 'one-digit';
  if (amount > 9) {
    slotClass = 'two-digits';
  }
  return `<span class="slot-amount ${slotClass}">${amount}</span>`;
}

function craftingRecipeHtml(inputMatrix, outputItem, outputAmount) {
  let inputHtml = ['<span class="mcui-input">'];
  inputMatrix.forEach(function (row) {
    inputHtml.push('<span class="mcui-row">');
    row.forEach(function (item) {

      inputHtml.push('<span class="slot">')
      if (typeof item === 'string') {
        inputHtml.push('<span class="slot-item">');
        inputHtml.push(itemSpriteHtml(item));
        inputHtml.push('</span>');
      } else if (item instanceof Array) {
        inputHtml.push('<span class="slot-item animated">');
        item.forEach(function (frame, i) {
          let additionalClasses = ['animated-frame'];
          if (i == 0) {
            additionalClasses.push('animated-frame-active');
          }
          inputHtml.push(itemSpriteHtml(frame, additionalClasses));
        });
        inputHtml.push('</span>');
      }

      inputHtml.push('</span>');
    });
    inputHtml.push('</span>');
  });
  inputHtml.push('</span>');

  arrowAdditionalClasses = inputMatrix.length == 2 ? ['mcui-arrow-special'] : []
  outputAdditionalClasses = inputMatrix.length == 2 ? ['mcui-output-special'] : []

  let outputHtml = [`<span class="mcui-output ${outputAdditionalClasses}"><span class="slot slot-large">`];
  if (typeof outputItem === 'string') {
    outputHtml.push('<span class="slot-item">');
    outputHtml.push(itemSpriteHtml(outputItem));
  } else if (outputItem instanceof Array) {
    outputHtml.push('<span class="slot-item animated">');
    outputItem.forEach(function (frame, i) {
      let additionalClasses = ['animated-frame'];
      if (i == 0) {
        additionalClasses.push('animated-frame-active');
      }
      outputHtml.push(itemSpriteHtml(frame, additionalClasses));
    });
  }
  if (outputAmount) {
    outputHtml.push(itemAmountHtml(outputAmount));
  }
  outputHtml.push('</span></span></span>');

  return `
    <div>
      <span class="mcui crafting-table">
        ${inputHtml.join('')}
        <span class="mcui-arrow ${arrowAdditionalClasses}">
          <span class="mcui-arrow">
            <br>
          </span>
        </span>
        ${outputHtml.join('')}
      </span>
    </div>
  `;
}

function craftingRecipe(inputMatrix, outputItem, outputAmount) {
  $('.grid-container').append(craftingRecipeHtml(inputMatrix, outputItem, outputAmount));
}

function smeltingRecipeHtml(inputItem, fuelItem, outputItem, outputAmount) {
  return `
    <div>
      <span class="mcui furnace">
        <span class="mcui-input">
          <span class="slot">
            <span class="slot-item">
              ${itemSpriteHtml(inputItem)}
            </span>
          </span>
          <span class="mcui-fuel">
            <br>
          </span>
          <span class="slot">
            <span class="slot-item">
              ${itemSpriteHtml(fuelItem)}
            </span>
          </span>
        </span>
        <span class="mcui-arrow"></span>
        <span class="mcui-output">
          <span class="slot slot-large">
            <span class="slot-item">
              ${itemSpriteHtml(outputItem)}
              ${outputAmount ? itemAmountHtml(outputAmount) : ''}
            </span>
          </span>
        </span>
      </span>
    </div>
  `;
}

function smeltingRecipe(inputItem, fuelItem, outputItem, outputAmount) {
  $('.grid-container').append(smeltingRecipeHtml(inputItem, fuelItem, outputItem, outputAmount));
}
